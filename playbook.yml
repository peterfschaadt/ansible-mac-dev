---
- hosts: mac
  vars:
    # User options
    username: ''
    user_home: ~
    user_hostname: ''
    # Osxlockdown options
    osxlockdown_install: True
    osxlockdown_url: https://github.com/SummitRoute/osxlockdown/releases/download/0.9/osxlockdown-0.9.tar.gz
    osxlockdown_path: '{{ user_home }}'
    # Shell options
    zsh_install: True
    zsh_zprezto_install: True
    # Brew options
    brew_update: True
    brew_bundle: True
    brew_cask: True
    # Node options
    node_install: True
    # Python options
    pip_install: True
    # Ruby options
    ruby_gems_install: False
    # Sublime Text options
    sublime_install: True
    sublime_cli_install: True
    sublime_package_manager_install: True
    # Mackup options:
    mackup_install: True
    mackup_restore: True
    mackup_backup: True
    mackup_engine: 'dropbox'
    mackup_path: ''

  tasks:
    - name: Print playbook info
      debug: msg="Configuring Mac as user {{ lookup('env','USER') }}"

    - name: Set hostname
      command: scutil --set HostName {{ user_hostname }}
      sudo: True

    - name: Install Mac command-line tools (without Xcode)
      command: xcode-select --install

#
### Osxlockdown
#

    - name: Download osxlockdown
      get_url:
        url={{ osxlockdown_url }}
        dest={{ osxlockdown_path }}

    - name: Unarchive osxlockdown
      unarchive:
        src={{ osxlockdown_path }}
        dest={{ osxlockdown_path }}
        copy=no

    - name: Run osxlockdown
      command: ./osxlockdown --commands_file {{ osxlockdown_path }}/commands.json
        chdir={{ osxlockdown_path }}
      sudo: True
      when: osxlockdown_install == True

#
### Python, Pip, virtualenv
#

    - name: Install virtualenv-burrito
      command: curl -sL https://raw.githubusercontent.com/brainsik/virtualenv-burrito/master/virtualenv-burrito.sh | $SHELL

    - name: Install pip with easy_install
      easy_install: name=pip
      sudo: True

    - name: Install global packages with pip
      pip:
        name={{ item }}
        state=latest
      sudo: True
      with_items:
        - ansible
        - virtualenv
        - virtualenv-wrapper

#
### Homebrew
#

    - name: Install Homebrew with Ruby
      command: /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

    - name: Update Homebrew and upgrade all packages
      homebrew:
        update_homebrew=yes
        upgrade_all=yes

    - name: Install bundle tap
      homebrew_tap:
        tap={{ item }}
        state=present
      with_items:
          - homebrew/bundle
      when: brew_bundle == True

    - name: Install caskroom tap
      homebrew_tap:
        tap={{ item }}
        state=present
      with_items:
          - caskroom/cask
      when: brew_cask == True

    - name: Install other taps
      homebrew_tap:
        tap={{ item }}
        state=present
      with_items:
          - gapple/services
          - pivotal/tap

    - name: Copy Homebrew bundle file
      template:
        src='group_vars/templates/Brewfile.j2'
        dest='{{ remote_dir_application }}/_settings.py'

    - name: Install programs with Homebrew's bundle
      command: brew bundle

    - name: Install programs with Homebrew
      sudo: False
      homebrew:
        name={{ item }}
        state=present
        update_homebrew=yes
      with_items:
          - brew-cask
          - coreutils
          - git
          - wget
          - dnsmasq
          - httpie
          - mackup
          - rbenv
          - ruby

#
# Node.js
#

    - name: Install Node.js
      homebrew:
        name=node
        state=present
        update_homebrew=yes
      when: node_install == True

    - name: Install global apps with npm
      npm:
        name={{ item }}
        global=yes
      with_items:
        - grunt-cli
      when: node_install == True

#
### Sublime Text
#

    - name: Configure Sublime Text CLI tool
      file:
        src=/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl
        dest=/usr/bin/subl
        state=link
      creates: /usr/bin/subl
      when: sublime_cli_install == True

    - name: Install Sublime Text Package Manager
      command: python -c "import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print 'Please restart Sublime Text to finish installation'"
      creates: {{ user_home }}/Library/Application\ Support/Sublime\ Text\ 3/Installed\ Packages/Package Control.sublime-package
      when: sublime_package_manager_install == True

    - name: Install these plugins with Sublime Text Package Manager
      debug:
        msg={{ item }}
      with_items:
        0_package_control_loader
        Ansible
        AutoPEP8
        Git
        GitGutter-Edge
        GitGutter
        Package Control
        SideBarEnhancements
        Theme - amCoder
        Unicode Character Highlighter

#
### Symlinks
#

    - name: Create home directory symlinks
      file: src={{ item.from }} dest={{ item.to }} state=link
      sudo: no
      with_items:
        - from: ~/Dropbox/mac/bin
          to: ~/bin

#
### Ruby
#

    - name: Install Ruby gems
      gem: name={{ item }} state=latest
      with_items:
        - brewbygems
        - bundler
        - compass
      when: ruby_gems_install == True

# TODO: Run osxdefaults

#
### Mackup
#

    - name: Run Mackup restore
      command: mackup restore

    - name: Run Mackup backup
      command: mackup backup

    # - name: Create symlink subl for Sublime Text's subl command
    #   file: src=/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl dest=/usr/bin/subl state=link

# Install zprezto (https://github.com/sorin-ionescu/prezto)